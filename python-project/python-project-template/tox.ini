[tox]
#envlist = py26,py27,pep8
envlist = pep8,py36
minversion = 1.6
skipsdist = False

[testenv]
install_command = pip3 install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
         NOSE_WITH_COVERAGE=1
         NOSE_COVER_BRANCHES=1
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands = nosetests {posargs:{toxinidir}/test/unit}


[testenv:devenv]
envdir = devenv
basepython = python3.6
usedevelop = True

[testenv:py36-release]
basepython = python3.6
deps =
  -r{toxinidir}/requirements.txt
commands = 
   {envpython} {toxinidir}/release.py {envdir} {envsitepackagesdir} {toxinidir}/build/python-project-template {toxinidir}


[testenv:cover]
setenv = VIRTUAL_ENV={envdir}
         NOSE_WITH_COVERAGE=1
         NOSE_COVER_BRANCHES=1
         NOSE_COVER_HTML=1
         NOSE_COVER_HTML_DIR={toxinidir}/cover

; [tox:jenkins]
; downloadcache = ~/cache/pip

[testenv:pep8]
commands =
  flake8 lzy bin test setup.py release.py

; [testenv:py3pep8]
; basepython = python3
; install_command = echo {packages}
; commands =
  ; # Gross hack. There's no other way to get it to /not/ install swift itself
  ; # (which triggers installing eventlet) but also get flake8 installed.
  ; pip install flake8
  ; flake8 swift test doc setup.py
  ; flake8 --filename=swift* bin

; [testenv:func]
; commands = nosetests {posargs:test/functional}

; [testenv:venv]
; commands = {posargs}

; [testenv:docs]
; commands = python setup.py build_sphinx

[flake8]
; # it's not a bug that we aren't using all of hacking
; # H102 -> apache2 license exists
; # H103 -> license is apache
; # H201 -> no bare excepts (unless marked with "  # noqa")
; # H231 -> Check for except statements to be Python 3.x compatible
; # H501 -> don't use locals() for str formatting
; # H903 -> \n not \r\n
ignore =  H306
; select = F,E,W,H102,H103,H201,H231,H501,H903
; exclude = .venv,.tox,dist,doc,*egg
; show-source = True
